"""
–ú–æ–¥—É–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ FAISS.

–§—É–Ω–∫—Ü–∏—è `build_faiss_index` —Å—Ç—Ä–æ–∏—Ç –∏–Ω–¥–µ–∫—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–µ–∫—Ç–æ—Ä–Ω—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π
—Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —á–∞–Ω–∫–æ–≤. –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤–µ–∫—Ç–æ—Ä—ã –∏ —á–∞–Ω–∫–∏,
—Å–æ–∑–¥–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤–º–µ—Å—Ç–µ —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏ (—á–∞–Ω–∫–∞–º–∏) –Ω–∞ –¥–∏—Å–∫.
"""
import faiss
import pickle
import numpy as np

def build_faiss_index(vectors):
    dim = vectors.shape[1]
    index = faiss.IndexFlatL2(dim)
    index.add(vectors)
    return index

if __name__ == "__main__":
    with open("vectors.npy", "rb") as f:
        vectors = np.load(f)
    with open("chunks.pkl", "rb") as f:
        all_chunks = pickle.load(f)
    index = build_faiss_index(vectors)
    faiss.write_index(index, "docs.index")
    with open("chunks.pkl", "wb") as f:
        pickle.dump(all_chunks, f)
    print("üì¶ Index and metadata saved")